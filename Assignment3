Assignment 3
Part 1: (5 points)
Let S = it is sunny, C = camping is fun, H = the homework is
done, and M = mathematics is easy.
 Translate into English: (M → H)∧(S →C)
 Translate into Propositional Logic: “Mathematics is easy or camping is fun, as long as it is sunny and the homework is done.”
Part 2: (5 points)
 Use a truth table to determine whether this is a tautology, contradiction, or neither: (¬B → ¬A) → ((¬B → A) → B)
 Use a truth table to determine whether this is a tautology, contradiction, or neither: ((A → B)∧(B → ¬A)) → A
Part 3: (5 points)
For each of the following pairs of propositions, show that the
two propositions are logically equivalent by finding a chain of equivalences from one
to the other. State which definition or law of logic justifies each equivalence in the
chain.
 (p ∧ q) → r , p → (q → r )
 (q ∨ r ) → p, (q → p)∧(r → p)
Part 4: (5 points)
Let Loves(x,y) mean “x loves y,” Traveler(x) mean “x is a traveler,”
City(x) mean “x is a city,” Lives(x,y) mean “x lives in y.”
 Translate into English: ∃x∀y∀z(City(x) ∧ Traveler (y)∧Li ves(z,x)) → (Loves(y,x)∧ ¬Loves(z,x))
 Translate into Predicate Logic: “No traveler loves the city they live in.”
Extra Credit: (5 points)
Assuming: p → (q ∧ r ), s → r , r → p
Prove: s → q.

Assuming: ¬(r ∨ s), ¬p → s, p → q. 
Prove: q

HINT:
Modus Ponen: If x -> q, and x, then q
Modus Tollens: If x -> q, and ~q, then ~x

Johnnie Phelps
Assignment 3

======================= Test Assignment =============================

(¬B → ¬A) → ((¬B → A) → B)
A	B	¬A	¬B	¬B -> ¬A	¬B -> A	((¬B -> A) -> B
T	T	F	F	T		
T	F	F	T	F		
F	T	T	F	T		
F	F	T	T	T

Part1:
let S = it is sunny, C = camping is fun, H = the homework is done, and M = mathematics is easy.

( M -> H ) ^ ( S -> C ) 
Mathematics is easy then the homework is done and if it is sunny then camping is fun.

“Mathematics is easy or camping is fun, as long as it is sunny and the homework is done.” 
(S ^ H) -> (M v C)

Part 2:
A	B	¬A	¬B	¬B -> ¬A	¬B -> A	((¬B -> A) -> B	(¬B → ¬A) → ((¬B → A) → B)
T	T	F	F	T	T	T	T
T	F	F	T	F	T	F	T
F	T	T	F	T	T	T	T
F	F	T	T	T	F	T	T
TAUTOLOGY							

A	B	¬A	A -> B	B -> ¬A	((A → B)∧(B → ¬A))	((A → B)∧(B → ¬A)) → A
T	T	F	T	F	F	T
T	F	F	F	T	F	T
F	T	T	T	T	T	F
F	F	T	T	T	T	F
NEITHER						

Part 3:
(p ∧ q) → r	=	p → (q → r )	Given
(p ^ q)' v r	=	p → (q → r )	implication
p' v q' v r	=	p → (q → r )	De Morgans
p' v (q → r)	=	p → (q → r )	implication
p → (q → r)	=	p → (q → r )	implication
(q → p)∧(r → p)	=	(q ∨ r ) → p	given
(q' v p) ^ (r' v p)	=	(q ∨ r ) → p	implication
p v (q' ^ r')	=	(q ∨ r ) → p	distributive
p v (q ^ r )'	=	(q ∨ r ) → p	De morgans
(q ^ r) -> p

Part 4:
Translate into English: ∃x∀y∀z(City(x) ∧ Traveler (y)∧Li ves(z,x)) → (Loves(y,x)∧ ¬Loves(z,x)) 
A traveler loves the city and those who live in the city do not love the city.

Translate into Predicate Logic: “No traveler loves the city they live in.” 
∃x∀y(City(x) ∧ Traveler (y)) → (¬Loves(y,x) ∧ Lives(y,x))

Part 5:
Assuming: p → (q ∧ r ), s → r , r → p
Prove	s → q

s	assumption
r	mpp
p	mpp
q ^ r	mpp
q	truth table
s → q	

Assuming: ¬(r ∨ s), ¬p → s, p → q.
Prove    q

¬s	De morgans Law
p	Modus Tollens
q	mpp
q	

		
